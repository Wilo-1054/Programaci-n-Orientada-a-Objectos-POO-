import pickle

class Producto:
    def __init__(self, id, nombre, cantidad, precio):
        self.id = id
        self.nombre = nombre
        self.cantidad = cantidad
        self.precio = precio

    def obtener_id(self):
        return self.id

    def establecer_id(self, id):
        self.id = id

    def obtener_nombre(self):
        return self.nombre

    def establecer_nombre(self, nombre):
        self.nombre = nombre

    def obtener_cantidad(self):
        return self.cantidad

    def establecer_cantidad(self, cantidad):
        self.cantidad = cantidad

    def obtener_precio(self):
        return self.precio

    def establecer_precio(self, precio):
        self.precio = precio

    def __str__(self):
        return f"ID: {self.id}, Nombre: {self.nombre}, Cantidad: {self.cantidad}, Precio: {self.precio}"

class Inventario:
    def __init__(self):
        self.productos = {}

    def agregar_producto(self, producto):
        if producto.obtener_id() not in self.productos:
            self.productos[producto.obtener_id()] = producto
        else:
            print("Error: El ID del producto ya existe.")

    def eliminar_producto(self, id):
        if id in self.productos:
            del self.productos[id]
        else:
            print("Error: Producto no encontrado.")

    def actualizar_producto(self, id, cantidad=None, precio=None):
        if id in self.productos:
            producto = self.productos[id]
            if cantidad is not None:
                producto.establecer_cantidad(cantidad)
            if precio is not None:
                producto.establecer_precio(precio)
        else:
            print("Error: Producto no encontrado.")

    def buscar_producto_por_nombre(self, nombre):
        resultados = [producto for producto in self.productos.values() if nombre.lower() in producto.obtener_nombre().lower()]
        return resultados

    def mostrar_inventario(self):
        if not self.productos:
            print("Inventario vacío.")
        else:
            for producto in self.productos.values():
                print(producto)

def guardar_inventario(inventario, nombre_archivo="inventario.pkl"):
    with open(nombre_archivo, "wb") as archivo:
        pickle.dump(inventario, archivo)

def cargar_inventario(nombre_archivo="inventario.pkl"):
    try:
        with open(nombre_archivo, "rb") as archivo:
            return pickle.load(archivo)
    except FileNotFoundError:
        return Inventario()

def menu():
    inventario = cargar_inventario()
    while True:
        print("\n--- Menú de Inventario ---")
        print("1. Agregar producto")
        print("2. Eliminar producto")
        print("3. Actualizar producto")
        print("4. Buscar producto por nombre")
        print("5. Mostrar inventario")
        print("6. Guardar y salir")

        opcion = input("Seleccione una opción: ")

        if opcion == "1":
            try:
                id = int(input("ID del producto: "))
                nombre = input("Nombre del producto: ")
                cantidad = int(input("Cantidad: "))
                precio = float(input("Precio: "))
                producto = Producto(id, nombre, cantidad, precio)
                inventario.agregar_producto(producto)
            except ValueError:
                print("Error: Datos inválidos. Asegúrese de ingresar números para ID, cantidad y precio.")

        elif opcion == "2":
            try:
                id = int(input("ID del producto a eliminar: "))
                inventario.eliminar_producto(id)
            except ValueError:
                print("Error: ID inválido.")

        elif opcion == "3":
            try:
                id = int(input("ID del producto a actualizar: "))
                cantidad = input("Nueva cantidad (deje en blanco para no cambiar): ")
                precio = input("Nuevo precio (deje en blanco para no cambiar): ")
                cantidad = int(cantidad) if cantidad else None
                precio = float(precio) if precio else None
                inventario.actualizar_producto(id, cantidad, precio)
            except ValueError:
                print("Error: Datos inválidos.")

        elif opcion == "4":
            nombre = input("Nombre del producto a buscar: ")
            resultados = inventario.buscar_producto_por_nombre(nombre)
            if resultados:
                for producto in resultados:
                    print(producto)
            else:
                print("Producto no encontrado.")

        elif opcion == "5":
            inventario.mostrar_inventario()

        elif opcion == "6":
            guardar_inventario(inventario)
            break

        else:
            print("Opción no válida.")

if __name__ == "__main__":
    menu()
