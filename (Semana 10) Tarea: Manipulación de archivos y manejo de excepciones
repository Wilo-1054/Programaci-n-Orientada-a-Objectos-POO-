import json

class Producto:
    def __init__(self, codigo, nombre, precio, cantidad):
        self.codigo = codigo
        self.nombre = nombre
        self.precio = precio
        self.cantidad = cantidad

class Inventario:
    def __init__(self, archivo_inventario="inventario.json"):
        self.archivo_inventario = archivo_inventario
        self.inventario = self.cargar_inventario()

    def cargar_inventario(self):
        try:
            with open(self.archivo_inventario, "r") as archivo:
                return json.load(archivo)
        except FileNotFoundError:
            print(f"Archivo '{self.archivo_inventario}' no encontrado. Creando uno nuevo.")
            return {}  # Inventario vacío
        except json.JSONDecodeError:
            print(f"Error al decodificar JSON en '{self.archivo_inventario}'. Se utilizará un inventario vacío.")
            return {}

    def guardar_inventario(self):
        try:
            with open(self.archivo_inventario, "w") as archivo:
                json.dump(self.inventario, archivo, indent=4)
            print(f"Inventario guardado en '{self.archivo_inventario}'")
        except Exception as e:
            print(f"Error al guardar inventario: {e}")

    def agregar_producto(self, producto):
        self.inventario[producto.codigo] = producto.__dict__  # Guardamos el diccionario del producto
        self.guardar_inventario()

    def actualizar_producto(self, producto):
        if producto.codigo in self.inventario:
            self.inventario[producto.codigo] = producto.__dict__
            self.guardar_inventario()
        else:
            print("Producto no encontrado.")

    def eliminar_producto(self, codigo):
        if codigo in self.inventario:
            del self.inventario[codigo]
            self.guardar_inventario()
        else:
            print("Producto no encontrado.")

    def mostrar_inventario(self):
        for codigo, detalles in self.inventario.items():
            print(f"Código: {codigo}")
            for clave, valor in detalles.items():
                print(f"  {clave.capitalize()}: {valor}")
            print("-" * 20)

def menu():
    inventario = Inventario()  # Cargamos el inventario desde el archivo

    while True:
        print("\n--- Menú de Gestión de Inventario ---")
        print("1. Agregar producto")
        print("2. Actualizar producto")
        print("3. Eliminar producto")
        print("4. Mostrar inventario")
        print("5. Salir")

        opcion = input("Seleccione una opción: ")

        try:
            if opcion == "1":
                codigo = input("Código: ")
                nombre = input("Nombre: ")
                precio = float(input("Precio: "))
                cantidad = int(input("Cantidad: "))
                producto = Producto(codigo, nombre, precio, cantidad)
                inventario.agregar_producto(producto)
            elif opcion == "2":
                codigo = input("Código del producto a actualizar: ")
                if codigo in inventario.inventario:
                    nombre = input("Nombre: ")
                    precio = float(input("Precio: "))
                    cantidad = int(input("Cantidad: "))
                    producto = Producto(codigo, nombre, precio, cantidad)
                    inventario.actualizar_producto(producto)
                else:
                    print("Producto no encontrado.")
            elif opcion == "3":
                codigo = input("Código del producto a eliminar: ")
                inventario.eliminar_producto(codigo)
            elif opcion == "4":
                inventario.mostrar_inventario()
            elif opcion == "5":
                break
            else:
                print("Opción no válida.")
        except Exception as e:
            print(f"Ocurrió un error: {e}")

if __name__ == "__main__":
    menu()
